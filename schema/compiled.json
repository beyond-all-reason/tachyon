{
    "$id": "https://schema.beyondallreason.dev/tachyon/compiled.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "TachyonCommand",
    "definitions": {
        "allyTeam": {
            "type": "object",
            "properties": {
                "teams": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/team" },
                    "minItems": 1
                },
                "startBox": { "$ref": "#/definitions/startBox" },
                "allies": {
                    "description": "0-based indexes into of the other allyteams to ally with",
                    "type": "array",
                    "items": { "type": "integer" }
                },
                "customProperties": {
                    "$ref": "#/definitions/customStartScriptProperties"
                }
            },
            "required": ["teams"]
        },
        "allyTeamConfig": {
            "description": "each object describes an ally team",
            "type": "array",
            "items": {
                "description": "config for this ally team",
                "type": "object",
                "properties": {
                    "maxTeams": { "type": "integer", "minimum": 1 },
                    "startBox": { "$ref": "#/definitions/startBox" },
                    "teams": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "maxPlayers": {
                                    "type": "integer",
                                    "minimum": 1
                                }
                            },
                            "required": ["maxPlayers"]
                        }
                    }
                },
                "required": ["maxTeams", "startBox", "teams"]
            }
        },
        "bot": {
            "type": "object",
            "properties": {
                "hostUserId": {
                    "description": "UserId of the player hosting this AI",
                    "type": "string"
                },
                "name": { "type": "string" },
                "aiShortName": {
                    "description": "Short name of the AI library",
                    "type": "string"
                },
                "aiVersion": { "type": "string" },
                "aiOptions": {
                    "description": "AI-specific options",
                    "type": "object",
                    "patternProperties": { "^(.*)$": { "type": "string" } }
                },
                "customProperties": {
                    "$ref": "#/definitions/customStartScriptProperties"
                }
            },
            "required": ["hostUserId", "aiShortName"]
        },
        "customStartScriptProperties": {
            "description": "Additional custom properties to set in engine StartScript for this object, must not collide with existing properties",
            "type": "object",
            "patternProperties": { "^[a-zA-Z0-9_-]$": { "type": "string" } }
        },
        "historyMarker": {
            "description": "an opaque value to allow history retrieval",
            "type": "string",
            "examples": ["-576460745805023"]
        },
        "lobbyDetails": {
            "description": "The full state of a lobby",
            "type": "object",
            "properties": {
                "id": { "type": "string" },
                "name": { "type": "string" },
                "mapName": { "type": "string" },
                "engineVersion": { "type": "string" },
                "gameVersion": { "type": "string" },
                "allyTeamConfig": {
                    "type": "object",
                    "patternProperties": {
                        "^(.*)$": {
                            "description": "this represent an array, items should be sorted lexicographically on their keys",
                            "type": "object",
                            "properties": {
                                "startBox": {
                                    "$ref": "#/definitions/startBox"
                                },
                                "maxTeams": { "type": "integer", "minimum": 1 },
                                "teams": {
                                    "type": "object",
                                    "patternProperties": {
                                        "^(.*)$": {
                                            "type": "object",
                                            "properties": {
                                                "maxPlayers": {
                                                    "type": "integer",
                                                    "minimum": 1
                                                }
                                            },
                                            "required": ["maxPlayers"]
                                        }
                                    }
                                }
                            },
                            "required": ["startBox", "maxTeams", "teams"]
                        }
                    }
                },
                "players": {
                    "type": "object",
                    "patternProperties": {
                        "^(.*)$": {
                            "type": "object",
                            "properties": {
                                "id": { "$ref": "#/definitions/userId" },
                                "allyTeam": { "type": "string" },
                                "team": { "type": "string" },
                                "player": { "type": "string" }
                            },
                            "required": ["id", "allyTeam", "team", "player"]
                        }
                    }
                },
                "spectators": {
                    "type": "object",
                    "patternProperties": {
                        "^(.*)$": {
                            "type": "object",
                            "properties": {
                                "id": { "$ref": "#/definitions/userId" },
                                "joinQueuePosition": { "type": "number" }
                            },
                            "required": ["id"]
                        }
                    }
                },
                "bots": {
                    "type": "object",
                    "patternProperties": {
                        "^(.*)$": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "description": "server assigned unique identifier for the bot",
                                    "type": "string"
                                },
                                "hostUserId": {
                                    "$ref": "#/definitions/userId",
                                    "description": "which player will run the bot. It is the same as the player that added the bot."
                                },
                                "allyTeam": { "type": "string" },
                                "team": { "type": "string" },
                                "player": { "type": "string" },
                                "name": {
                                    "description": "name to display in the lobby",
                                    "type": "string",
                                    "maxLength": 20
                                },
                                "shortName": {
                                    "description": "short name of the bot. Used to uniquely identify which bot to run",
                                    "type": "string",
                                    "maxLength": 20
                                },
                                "version": { "type": "string" },
                                "options": {
                                    "type": "object",
                                    "patternProperties": {
                                        "^(.*)$": { "type": "string" }
                                    }
                                }
                            },
                            "required": [
                                "id",
                                "hostUserId",
                                "allyTeam",
                                "team",
                                "player",
                                "shortName"
                            ]
                        }
                    }
                },
                "currentBattle": {
                    "description": "If a battle is currently happening, here are the info",
                    "type": "object",
                    "properties": {
                        "startedAt": { "$ref": "#/definitions/unixTime" }
                    },
                    "required": ["startedAt"]
                }
            },
            "required": [
                "id",
                "name",
                "mapName",
                "engineVersion",
                "gameVersion",
                "allyTeamConfig",
                "players",
                "spectators",
                "bots"
            ]
        },
        "lobbyOverview": {
            "description": "Simplified view of a lobby for list display purposes.",
            "type": "object",
            "properties": {
                "id": { "type": "string" },
                "name": { "type": "string" },
                "playerCount": { "type": "integer" },
                "maxPlayerCount": { "type": "integer" },
                "mapName": { "type": "string" },
                "engineVersion": { "type": "string" },
                "gameVersion": { "type": "string" },
                "currentBattle": {
                    "anyOf": [
                        {
                            "type": "object",
                            "properties": {
                                "startedAt": {
                                    "$ref": "#/definitions/unixTime"
                                }
                            },
                            "required": ["startedAt"]
                        },
                        { "type": "null" }
                    ]
                }
            },
            "required": [
                "id",
                "name",
                "playerCount",
                "maxPlayerCount",
                "mapName",
                "engineVersion",
                "gameVersion",
                "currentBattle"
            ]
        },
        "partyId": {
            "type": "string",
            "examples": ["1882f6b2e3a4d14f24acb7aa"]
        },
        "partyState": {
            "type": "object",
            "properties": {
                "id": { "$ref": "#/definitions/partyId" },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "userId": { "$ref": "#/definitions/userId" },
                            "joinedAt": { "$ref": "#/definitions/unixTime" }
                        },
                        "required": ["userId", "joinedAt"]
                    }
                },
                "invited": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "userId": { "$ref": "#/definitions/userId" },
                            "invitedAt": { "$ref": "#/definitions/unixTime" }
                        },
                        "required": ["userId", "invitedAt"]
                    }
                }
            },
            "required": ["id", "members", "invited"]
        },
        "player": {
            "type": "object",
            "properties": {
                "userId": { "$ref": "#/definitions/userId" },
                "name": {
                    "description": "Name of the player, must be unique just like userId",
                    "type": "string"
                },
                "password": { "type": "string" },
                "rank": { "type": "integer" },
                "countryCode": { "type": "string" },
                "customProperties": {
                    "$ref": "#/definitions/customStartScriptProperties"
                }
            },
            "required": ["userId", "name", "password"]
        },
        "privateBattle": {
            "description": "Battle informations including secrets to pass to spring for joining the game server. Don't expose secrets to other players.",
            "type": "object",
            "properties": {
                "username": { "type": "string" },
                "password": { "type": "string" },
                "ip": { "type": "string" },
                "port": { "type": "number" },
                "engine": {
                    "type": "object",
                    "properties": { "version": { "type": "string" } },
                    "required": ["version"]
                },
                "game": {
                    "type": "object",
                    "properties": { "springName": { "type": "string" } },
                    "required": ["springName"]
                },
                "map": {
                    "type": "object",
                    "properties": { "springName": { "type": "string" } },
                    "required": ["springName"]
                }
            },
            "required": [
                "username",
                "password",
                "ip",
                "port",
                "engine",
                "game",
                "map"
            ]
        },
        "privateUser": {
            "allOf": [
                { "$ref": "#/definitions/user" },
                {
                    "type": "object",
                    "properties": {
                        "party": {
                            "anyOf": [
                                { "$ref": "#/definitions/partyState" },
                                { "type": "null" }
                            ]
                        },
                        "invitedToParties": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/partyState" }
                        },
                        "friendIds": {
                            "type": "array",
                            "items": { "type": "string" }
                        },
                        "outgoingFriendRequest": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "to": { "$ref": "#/definitions/userId" },
                                    "sentAt": {
                                        "$ref": "#/definitions/unixTime"
                                    }
                                },
                                "required": ["to", "sentAt"]
                            }
                        },
                        "incomingFriendRequest": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "from": { "$ref": "#/definitions/userId" },
                                    "sentAt": {
                                        "$ref": "#/definitions/unixTime"
                                    }
                                },
                                "required": ["from", "sentAt"]
                            }
                        },
                        "ignoreIds": {
                            "type": "array",
                            "items": { "type": "string" }
                        },
                        "currentBattle": {
                            "$ref": "#/definitions/privateBattle"
                        },
                        "currentLobby": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }]
                        }
                    },
                    "required": [
                        "party",
                        "invitedToParties",
                        "friendIds",
                        "outgoingFriendRequest",
                        "incomingFriendRequest",
                        "ignoreIds",
                        "currentLobby"
                    ]
                }
            ]
        },
        "startBox": {
            "type": "object",
            "properties": {
                "top": { "type": "number", "minimum": 0, "maximum": 1 },
                "bottom": { "type": "number", "minimum": 0, "maximum": 1 },
                "left": { "type": "number", "minimum": 0, "maximum": 1 },
                "right": { "type": "number", "minimum": 0, "maximum": 1 }
            },
            "required": ["top", "bottom", "left", "right"]
        },
        "startPosType": { "enum": ["fixed", "random", "ingame", "beforegame"] },
        "team": {
            "type": "object",
            "properties": {
                "players": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/player" }
                },
                "bots": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/bot" }
                },
                "advantage": { "type": "number", "minimum": -1 },
                "incomeMultiplier": { "type": "number", "minimum": 0 },
                "faction": { "type": "string" },
                "color": {
                    "type": "object",
                    "properties": {
                        "r": { "type": "number", "minimum": 0, "maximum": 1 },
                        "g": { "type": "number", "minimum": 0, "maximum": 1 },
                        "b": { "type": "number", "minimum": 0, "maximum": 1 }
                    },
                    "required": ["r", "g", "b"]
                },
                "startPos": {
                    "type": "object",
                    "properties": {
                        "x": { "type": "integer" },
                        "y": { "type": "integer" }
                    },
                    "required": ["x", "y"]
                },
                "customProperties": {
                    "$ref": "#/definitions/customStartScriptProperties"
                }
            }
        },
        "unixTime": {
            "description": "Unix timestamp in microseconds",
            "type": "integer",
            "examples": [1705432698000000]
        },
        "user": {
            "type": "object",
            "properties": {
                "userId": { "$ref": "#/definitions/userId" },
                "username": { "type": "string" },
                "displayName": { "type": "string" },
                "clanId": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }]
                },
                "countryCode": { "type": "string" },
                "status": { "enum": ["offline", "menu", "playing", "lobby"] },
                "rating": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "description": "Key is omitted when the player isn't rated yet.",
                            "type": "number"
                        }
                    },
                    "required": ["value"]
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "enum": [
                            "contributor",
                            "admin",
                            "moderator",
                            "tournament_winner",
                            "tournament_caster"
                        ]
                    },
                    "uniqueItems": true
                }
            },
            "required": [
                "userId",
                "username",
                "displayName",
                "clanId",
                "status"
            ]
        },
        "userId": { "type": "string", "examples": ["351"] }
    },
    "anyOf": [
        {
            "title": "AutohostAddPlayerRequest",
            "tachyon": {
                "source": "server",
                "target": "autohost",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "autohost/addPlayer" },
                "data": {
                    "title": "AutohostAddPlayerRequestData",
                    "type": "object",
                    "properties": {
                        "battleId": { "type": "string", "format": "uuid" },
                        "userId": { "$ref": "#/definitions/userId" },
                        "name": { "type": "string" },
                        "password": { "type": "string" }
                    },
                    "required": ["battleId", "userId", "name", "password"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "AutohostAddPlayerResponse",
            "tachyon": {
                "source": "autohost",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "AutohostAddPlayerOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/addPlayer" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "AutohostAddPlayerFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/addPlayer" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "AutohostInstallEngineRequest",
            "tachyon": {
                "source": "server",
                "target": "autohost",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "autohost/installEngine" },
                "data": {
                    "title": "AutohostInstallEngineRequestData",
                    "type": "object",
                    "properties": {
                        "version": {
                            "description": "Version of the engine to install",
                            "type": "string"
                        }
                    },
                    "required": ["version"],
                    "examples": [{ "version": "2025.01.5" }]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "AutohostInstallEngineResponse",
            "tachyon": {
                "source": "autohost",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "AutohostInstallEngineOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/installEngine" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "AutohostInstallEngineFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/installEngine" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "AutohostKickPlayerRequest",
            "tachyon": {
                "source": "server",
                "target": "autohost",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "autohost/kickPlayer" },
                "data": {
                    "title": "AutohostKickPlayerRequestData",
                    "type": "object",
                    "properties": {
                        "battleId": { "type": "string", "format": "uuid" },
                        "userId": { "$ref": "#/definitions/userId" }
                    },
                    "required": ["battleId", "userId"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "AutohostKickPlayerResponse",
            "tachyon": {
                "source": "autohost",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "AutohostKickPlayerOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/kickPlayer" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "AutohostKickPlayerFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/kickPlayer" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "AutohostKillRequest",
            "tachyon": {
                "source": "server",
                "target": "autohost",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "autohost/kill" },
                "data": {
                    "title": "AutohostKillRequestData",
                    "type": "object",
                    "properties": {
                        "battleId": { "type": "string", "format": "uuid" }
                    },
                    "required": ["battleId"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "AutohostKillResponse",
            "tachyon": {
                "source": "autohost",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "AutohostKillOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/kill" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "AutohostKillFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/kill" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "AutohostMutePlayerRequest",
            "tachyon": {
                "source": "server",
                "target": "autohost",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "autohost/mutePlayer" },
                "data": {
                    "title": "AutohostMutePlayerRequestData",
                    "type": "object",
                    "properties": {
                        "battleId": { "type": "string", "format": "uuid" },
                        "userId": { "$ref": "#/definitions/userId" },
                        "chat": { "type": "boolean" },
                        "draw": { "type": "boolean" }
                    },
                    "required": ["battleId", "userId", "chat", "draw"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "AutohostMutePlayerResponse",
            "tachyon": {
                "source": "autohost",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "AutohostMutePlayerOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/mutePlayer" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "AutohostMutePlayerFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/mutePlayer" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "AutohostSendCommandRequest",
            "tachyon": {
                "source": "server",
                "target": "autohost",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "autohost/sendCommand" },
                "data": {
                    "title": "AutohostSendCommandRequestData",
                    "type": "object",
                    "properties": {
                        "battleId": { "type": "string", "format": "uuid" },
                        "command": { "type": "string" },
                        "arguments": {
                            "type": "array",
                            "items": { "type": "string" }
                        }
                    },
                    "required": ["battleId", "command"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "AutohostSendCommandResponse",
            "tachyon": {
                "source": "autohost",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "AutohostSendCommandOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/sendCommand" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "AutohostSendCommandFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/sendCommand" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "AutohostSendMessageRequest",
            "tachyon": {
                "source": "server",
                "target": "autohost",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "autohost/sendMessage" },
                "data": {
                    "title": "AutohostSendMessageRequestData",
                    "type": "object",
                    "properties": {
                        "battleId": { "type": "string", "format": "uuid" },
                        "message": { "type": "string", "maxLength": 127 }
                    },
                    "required": ["battleId", "message"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "AutohostSendMessageResponse",
            "tachyon": {
                "source": "autohost",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "AutohostSendMessageOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/sendMessage" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "AutohostSendMessageFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/sendMessage" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "AutohostSpecPlayersRequest",
            "tachyon": {
                "source": "server",
                "target": "autohost",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "autohost/specPlayers" },
                "data": {
                    "title": "AutohostSpecPlayersRequestData",
                    "type": "object",
                    "properties": {
                        "battleId": { "type": "string", "format": "uuid" },
                        "userIds": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/userId" }
                        }
                    },
                    "required": ["battleId", "userIds"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "AutohostSpecPlayersResponse",
            "tachyon": {
                "source": "autohost",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "AutohostSpecPlayersOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/specPlayers" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "AutohostSpecPlayersFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/specPlayers" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "AutohostStartRequest",
            "tachyon": {
                "source": "server",
                "target": "autohost",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "autohost/start" },
                "data": {
                    "title": "AutohostStartRequestData",
                    "type": "object",
                    "properties": {
                        "battleId": { "type": "string", "format": "uuid" },
                        "engineVersion": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z .+-]+$"
                        },
                        "gameName": { "type": "string" },
                        "mapName": { "type": "string" },
                        "gameArchiveHash": {
                            "type": "string",
                            "pattern": "^[a-fA-F0-9]{128}$"
                        },
                        "mapArchiveHash": {
                            "type": "string",
                            "pattern": "^[a-fA-F0-9]{128}$"
                        },
                        "startDelay": { "type": "integer" },
                        "startPosType": {
                            "$ref": "#/definitions/startPosType"
                        },
                        "allyTeams": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/allyTeam" },
                            "minItems": 1
                        },
                        "spectators": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/player" }
                        },
                        "mapOptions": {
                            "type": "object",
                            "patternProperties": {
                                "^(.*)$": { "type": "string" }
                            }
                        },
                        "gameOptions": {
                            "type": "object",
                            "patternProperties": {
                                "^(.*)$": { "type": "string" }
                            }
                        },
                        "restrictions": {
                            "description": "Mapping from unitDefId to the maximum number of units of that type that can be built.",
                            "type": "object",
                            "patternProperties": {
                                "^(.*)$": { "type": "integer", "minimum": 0 }
                            }
                        },
                        "luamsgRegexp": {
                            "description": "When set, battle will generate updates for luamsgs matching this regexp. No updates will be generated if this is not set.",
                            "type": "string",
                            "format": "regex"
                        }
                    },
                    "required": [
                        "battleId",
                        "engineVersion",
                        "gameName",
                        "mapName",
                        "startPosType",
                        "allyTeams"
                    ]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "AutohostStartResponse",
            "tachyon": {
                "source": "autohost",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "AutohostStartOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/start" },
                        "status": { "const": "success" },
                        "data": {
                            "title": "AutohostStartOkResponseData",
                            "type": "object",
                            "properties": {
                                "ips": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "ipv4"
                                            },
                                            {
                                                "type": "string",
                                                "format": "ipv6"
                                            }
                                        ]
                                    }
                                },
                                "port": {
                                    "type": "integer",
                                    "minimum": 1024,
                                    "maximum": 65535
                                }
                            },
                            "required": ["ips", "port"]
                        }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "data"
                    ]
                },
                {
                    "title": "AutohostStartFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/start" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "battle_already_exists",
                                "engine_version_not_available",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "AutohostStatusEvent",
            "tachyon": {
                "source": "autohost",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "autohost/status" },
                "data": {
                    "title": "AutohostStatusEventData",
                    "type": "object",
                    "properties": {
                        "maxBattles": {
                            "description": "The maxBattles might be reported lower (e.g. 0) then currentBattles. Example: autohost is shutting down and doesn't want to accept any new battles.",
                            "type": "integer",
                            "minimum": 0
                        },
                        "currentBattles": { "type": "integer", "minimum": 0 },
                        "availableEngines": {
                            "description": "List of available engine versions on autohost",
                            "type": "array",
                            "items": { "type": "string" }
                        }
                    },
                    "required": [
                        "maxBattles",
                        "currentBattles",
                        "availableEngines"
                    ],
                    "examples": [
                        {
                            "maxBattles": 10,
                            "currentBattles": 5,
                            "availableEngines": ["2025.01.5"]
                        }
                    ]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "AutohostSubscribeUpdatesRequest",
            "tachyon": {
                "source": "server",
                "target": "autohost",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "autohost/subscribeUpdates" },
                "data": {
                    "title": "AutohostSubscribeUpdatesRequestData",
                    "type": "object",
                    "properties": {
                        "since": { "$ref": "#/definitions/unixTime" }
                    },
                    "required": ["since"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "AutohostSubscribeUpdatesResponse",
            "tachyon": {
                "source": "autohost",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "AutohostSubscribeUpdatesOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/subscribeUpdates" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "AutohostSubscribeUpdatesFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "autohost/subscribeUpdates" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "AutohostUpdateEvent",
            "tachyon": {
                "source": "autohost",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "autohost/update" },
                "data": {
                    "title": "AutohostUpdateEventData",
                    "type": "object",
                    "properties": {
                        "battleId": { "type": "string", "format": "uuid" },
                        "time": { "$ref": "#/definitions/unixTime" },
                        "update": {
                            "anyOf": [
                                {
                                    "title": "StartUpdate",
                                    "description": "The battle has started.",
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "start" }
                                    },
                                    "required": ["type"]
                                },
                                {
                                    "title": "FinishedUpdate",
                                    "description": "The battle finished, generated once per every single player reporting who won.",
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "finished" },
                                        "userId": {
                                            "$ref": "#/definitions/userId"
                                        },
                                        "winningAllyTeams": {
                                            "description": "Ally team IDs",
                                            "type": "array",
                                            "items": { "type": "integer" },
                                            "minItems": 1
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "userId",
                                        "winningAllyTeams"
                                    ]
                                },
                                {
                                    "title": "EngineMessageUpdate",
                                    "description": "A message from the engine, e.g. some ip is trying to connect.",
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "engine_message" },
                                        "message": { "type": "string" }
                                    },
                                    "required": ["type", "message"]
                                },
                                {
                                    "title": "EngineWarningUpdate",
                                    "description": "A warning from the engine.",
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "engine_warning" },
                                        "message": { "type": "string" }
                                    },
                                    "required": ["type", "message"]
                                },
                                {
                                    "title": "EngineQuitUpdate",
                                    "description": "The engine process for battle has quit cleanly, no more updates will be sent for this battle.",
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "engine_quit" }
                                    },
                                    "required": ["type"]
                                },
                                {
                                    "title": "EngineCrashUpdate",
                                    "description": "The engine process for battle has crashed, no more updates will be sent for this battle.",
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "engine_crash" },
                                        "details": {
                                            "description": "Optional, short, details of the crash.",
                                            "type": "string"
                                        }
                                    },
                                    "required": ["type"]
                                },
                                {
                                    "title": "PlayerJoinedUpdate",
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "player_joined" },
                                        "userId": {
                                            "$ref": "#/definitions/userId"
                                        },
                                        "playerNumber": {
                                            "description": "Player number in the game, can be useful for custom commands",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "userId",
                                        "playerNumber"
                                    ]
                                },
                                {
                                    "title": "PlayerLeftUpdate",
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "player_left" },
                                        "userId": {
                                            "$ref": "#/definitions/userId"
                                        },
                                        "reason": {
                                            "enum": [
                                                "lost_connection",
                                                "left",
                                                "kicked"
                                            ]
                                        }
                                    },
                                    "required": ["type", "userId", "reason"]
                                },
                                {
                                    "title": "PlayerChatUpdate",
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "const": "player_chat"
                                                },
                                                "userId": {
                                                    "$ref": "#/definitions/userId"
                                                },
                                                "message": { "type": "string" },
                                                "destination": {
                                                    "enum": [
                                                        "allies",
                                                        "all",
                                                        "spectators"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "userId",
                                                "message",
                                                "destination"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "const": "player_chat"
                                                },
                                                "userId": {
                                                    "$ref": "#/definitions/userId"
                                                },
                                                "message": { "type": "string" },
                                                "destination": {
                                                    "const": "player"
                                                },
                                                "toUserId": {
                                                    "$ref": "#/definitions/userId"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "userId",
                                                "message",
                                                "destination",
                                                "toUserId"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "title": "PlayerDefeatedUpdate",
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "player_defeated" },
                                        "userId": {
                                            "$ref": "#/definitions/userId"
                                        }
                                    },
                                    "required": ["type", "userId"]
                                },
                                {
                                    "title": "LuaMsgUpdate",
                                    "description": "This update is generated only for messages matching luamsgRegexp set in the battle start script.",
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "luamsg" },
                                        "userId": {
                                            "$ref": "#/definitions/userId"
                                        },
                                        "script": {
                                            "enum": ["ui", "game", "rules"]
                                        },
                                        "uiMode": {
                                            "description": "Set when script is 'ui'",
                                            "enum": [
                                                "all",
                                                "allies",
                                                "spectators"
                                            ]
                                        },
                                        "data": {
                                            "type": "string",
                                            "contentEncoding": "base64",
                                            "contentMediaType": "application/octet-stream"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "userId",
                                        "script",
                                        "data"
                                    ]
                                }
                            ]
                        }
                    },
                    "required": ["battleId", "time", "update"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "BattleStartRequest",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "battle/start" },
                "data": {
                    "$ref": "#/definitions/privateBattle",
                    "title": "BattleStartRequestData"
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "BattleStartResponse",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "BattleStartOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "battle/start" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "BattleStartFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "battle/start" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "FriendAcceptRequestRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "friend/acceptRequest" },
                "data": {
                    "title": "FriendAcceptRequestRequestData",
                    "type": "object",
                    "properties": {
                        "from": { "$ref": "#/definitions/userId" }
                    },
                    "required": ["from"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "FriendAcceptRequestResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "FriendAcceptRequestOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "friend/acceptRequest" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "FriendAcceptRequestFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "friend/acceptRequest" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "invalid_user",
                                "no_pending_request",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "FriendCancelRequestRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "friend/cancelRequest" },
                "data": {
                    "title": "FriendCancelRequestRequestData",
                    "type": "object",
                    "properties": { "to": { "$ref": "#/definitions/userId" } },
                    "required": ["to"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "FriendCancelRequestResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "FriendCancelRequestOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "friend/cancelRequest" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "FriendCancelRequestFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "friend/cancelRequest" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "invalid_user",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "FriendListRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "friend/list" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "FriendListResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "FriendListOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "friend/list" },
                        "status": { "const": "success" },
                        "data": {
                            "title": "FriendListOkResponseData",
                            "type": "object",
                            "properties": {
                                "friends": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "userId": {
                                                "$ref": "#/definitions/userId"
                                            },
                                            "addedAt": {
                                                "$ref": "#/definitions/unixTime"
                                            }
                                        },
                                        "required": ["userId", "addedAt"]
                                    }
                                },
                                "outgoingPendingRequests": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "to": {
                                                "$ref": "#/definitions/userId"
                                            },
                                            "sentAt": {
                                                "$ref": "#/definitions/unixTime"
                                            }
                                        },
                                        "required": ["to", "sentAt"]
                                    }
                                },
                                "incomingPendingRequests": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "from": {
                                                "$ref": "#/definitions/userId"
                                            },
                                            "sentAt": {
                                                "$ref": "#/definitions/unixTime"
                                            }
                                        },
                                        "required": ["from", "sentAt"]
                                    }
                                }
                            },
                            "required": [
                                "friends",
                                "outgoingPendingRequests",
                                "incomingPendingRequests"
                            ]
                        }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "data"
                    ]
                },
                {
                    "title": "FriendListFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "friend/list" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "FriendRejectRequestRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "friend/rejectRequest" },
                "data": {
                    "title": "FriendRejectRequestRequestData",
                    "type": "object",
                    "properties": {
                        "from": { "$ref": "#/definitions/userId" }
                    },
                    "required": ["from"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "FriendRejectRequestResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "FriendRejectRequestOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "friend/rejectRequest" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "FriendRejectRequestFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "friend/rejectRequest" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "invalid_user",
                                "no_pending_request",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "FriendRemoveRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "friend/remove" },
                "data": {
                    "title": "FriendRemoveRequestData",
                    "type": "object",
                    "properties": {
                        "userId": { "$ref": "#/definitions/userId" }
                    },
                    "required": ["userId"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "FriendRemoveResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "FriendRemoveOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "friend/remove" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "FriendRemoveFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "friend/remove" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "invalid_user",
                                "not_in_friendlist",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "FriendRemovedEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "friend/removed" },
                "data": {
                    "title": "FriendRemovedEventData",
                    "type": "object",
                    "properties": {
                        "from": { "$ref": "#/definitions/userId" }
                    },
                    "required": ["from"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "FriendRequestAcceptedEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "friend/requestAccepted" },
                "data": {
                    "title": "FriendRequestAcceptedEventData",
                    "type": "object",
                    "properties": {
                        "from": { "$ref": "#/definitions/userId" }
                    },
                    "required": ["from"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "FriendRequestCancelledEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "friend/requestCancelled" },
                "data": {
                    "title": "FriendRequestCancelledEventData",
                    "type": "object",
                    "properties": {
                        "from": { "$ref": "#/definitions/userId" }
                    },
                    "required": ["from"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "FriendRequestReceivedEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "friend/requestReceived" },
                "data": {
                    "title": "FriendRequestReceivedEventData",
                    "type": "object",
                    "properties": {
                        "from": { "$ref": "#/definitions/userId" }
                    },
                    "required": ["from"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "FriendRequestRejectedEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "friend/requestRejected" },
                "data": {
                    "title": "FriendRequestRejectedEventData",
                    "type": "object",
                    "properties": {
                        "from": { "$ref": "#/definitions/userId" }
                    },
                    "required": ["from"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "FriendSendRequestRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "friend/sendRequest" },
                "data": {
                    "title": "FriendSendRequestRequestData",
                    "type": "object",
                    "properties": { "to": { "$ref": "#/definitions/userId" } },
                    "required": ["to"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "FriendSendRequestResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "FriendSendRequestOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "friend/sendRequest" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "FriendSendRequestFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "friend/sendRequest" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "invalid_user",
                                "already_in_friendlist",
                                "outgoing_capacity_reached",
                                "incoming_capacity_reached",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbyAddBotRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/addBot" },
                "data": {
                    "title": "LobbyAddBotRequestData",
                    "type": "object",
                    "properties": {
                        "allyTeam": { "type": "string" },
                        "name": {
                            "description": "name to display in the lobby",
                            "type": "string",
                            "maxLength": 20
                        },
                        "shortName": {
                            "description": "Short name of the bot. Used to uniquely identify which bot to run",
                            "type": "string",
                            "maxLength": 20
                        },
                        "version": { "type": "string" },
                        "options": {
                            "type": "object",
                            "patternProperties": {
                                "^(.*)$": { "type": "string" }
                            }
                        }
                    },
                    "required": ["allyTeam", "shortName"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "LobbyAddBotResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "LobbyAddBotOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/addBot" },
                        "status": { "const": "success" },
                        "data": {
                            "title": "LobbyAddBotOkResponseData",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "description": "The id the server generated for this bot",
                                    "type": "string"
                                }
                            },
                            "required": ["id"]
                        }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "data"
                    ]
                },
                {
                    "title": "LobbyAddBotFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/addBot" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "not_in_lobby",
                                "ally_team_full",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbyCreateRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/create" },
                "data": {
                    "title": "LobbyCreateRequestData",
                    "type": "object",
                    "properties": {
                        "name": { "type": "string" },
                        "mapName": { "type": "string" },
                        "allyTeamConfig": {
                            "$ref": "#/definitions/allyTeamConfig"
                        }
                    },
                    "required": ["name", "mapName", "allyTeamConfig"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "LobbyCreateResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "LobbyCreateOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/create" },
                        "status": { "const": "success" },
                        "data": {
                            "$ref": "#/definitions/lobbyDetails",
                            "title": "LobbyCreateOkResponseData"
                        }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "data"
                    ]
                },
                {
                    "title": "LobbyCreateFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/create" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbyJoinRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/join" },
                "data": {
                    "title": "LobbyJoinRequestData",
                    "type": "object",
                    "properties": { "id": { "type": "string" } },
                    "required": ["id"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "LobbyJoinResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "LobbyJoinOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/join" },
                        "status": { "const": "success" },
                        "data": {
                            "$ref": "#/definitions/lobbyDetails",
                            "title": "LobbyJoinOkResponseData"
                        }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "data"
                    ]
                },
                {
                    "title": "LobbyJoinFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/join" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "lobby_full",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbyJoinAllyTeamRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/joinAllyTeam" },
                "data": {
                    "title": "LobbyJoinAllyTeamRequestData",
                    "type": "object",
                    "properties": { "allyTeam": { "type": "string" } },
                    "required": ["allyTeam"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "LobbyJoinAllyTeamResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "LobbyJoinAllyTeamOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/joinAllyTeam" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "LobbyJoinAllyTeamFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/joinAllyTeam" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "not_in_lobby",
                                "ally_team_full",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbyJoinQueueRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/joinQueue" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "LobbyJoinQueueResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "LobbyJoinQueueOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/joinQueue" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "LobbyJoinQueueFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/joinQueue" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "not_in_lobby",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbyLeaveRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/leave" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "LobbyLeaveResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "LobbyLeaveOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/leave" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "LobbyLeaveFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/leave" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbyLeftEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/left" },
                "data": {
                    "title": "LobbyLeftEventData",
                    "type": "object",
                    "properties": {
                        "id": { "type": "string" },
                        "reason": { "type": "string" }
                    },
                    "required": ["id", "reason"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "LobbyListResetEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/listReset" },
                "data": {
                    "title": "LobbyListResetEventData",
                    "type": "object",
                    "properties": {
                        "lobbies": {
                            "type": "object",
                            "patternProperties": {
                                "^(.*)$": {
                                    "$ref": "#/definitions/lobbyOverview"
                                }
                            }
                        }
                    },
                    "required": ["lobbies"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "LobbyListUpdatedEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/listUpdated" },
                "data": {
                    "title": "LobbyListUpdatedEventData",
                    "type": "object",
                    "properties": {
                        "lobbies": {
                            "type": "object",
                            "patternProperties": {
                                "^(.*)$": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": { "type": "string" },
                                                "name": { "type": "string" },
                                                "playerCount": {
                                                    "type": "integer"
                                                },
                                                "maxPlayerCount": {
                                                    "type": "integer"
                                                },
                                                "mapName": { "type": "string" },
                                                "engineVersion": {
                                                    "type": "string"
                                                },
                                                "gameVersion": {
                                                    "type": "string"
                                                },
                                                "currentBattle": {
                                                    "anyOf": [
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "startedAt": {
                                                                    "$ref": "#/definitions/unixTime"
                                                                }
                                                            },
                                                            "required": [
                                                                "startedAt"
                                                            ]
                                                        },
                                                        { "type": "null" }
                                                    ]
                                                }
                                            },
                                            "required": ["id"]
                                        },
                                        { "type": "null" }
                                    ]
                                }
                            }
                        }
                    },
                    "required": ["lobbies"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "LobbyRemoveBotRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/removeBot" },
                "data": {
                    "title": "LobbyRemoveBotRequestData",
                    "type": "object",
                    "properties": { "id": { "type": "string" } },
                    "required": ["id"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "LobbyRemoveBotResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "LobbyRemoveBotOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/removeBot" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "LobbyRemoveBotFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/removeBot" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "not_in_lobby",
                                "invalid_bot",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbySpectateRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/spectate" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "LobbySpectateResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "LobbySpectateOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/spectate" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "LobbySpectateFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/spectate" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "not_in_lobby",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbyStartBattleRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/startBattle" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "LobbyStartBattleResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "LobbyStartBattleOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/startBattle" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "LobbyStartBattleFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/startBattle" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbySubscribeListRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/subscribeList" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "LobbySubscribeListResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "LobbySubscribeListOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/subscribeList" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "LobbySubscribeListFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/subscribeList" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbyUnsubscribeListRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/unsubscribeList" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "LobbyUnsubscribeListResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "LobbyUnsubscribeListOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/unsubscribeList" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "LobbyUnsubscribeListFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/unsubscribeList" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbyUpdateRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/update" },
                "data": {
                    "title": "LobbyUpdateRequestData",
                    "type": "object",
                    "properties": {
                        "name": {
                            "description": "to rename the lobby",
                            "type": "string"
                        },
                        "mapName": { "type": "string" },
                        "allyTeamConfig": {
                            "$ref": "#/definitions/allyTeamConfig"
                        }
                    }
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "LobbyUpdateResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "LobbyUpdateOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/update" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "LobbyUpdateFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/update" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbyUpdateBotRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/updateBot" },
                "data": {
                    "title": "LobbyUpdateBotRequestData",
                    "type": "object",
                    "properties": {
                        "id": { "type": "string" },
                        "name": {
                            "description": "name to display in the lobby",
                            "type": "string",
                            "maxLength": 20
                        },
                        "shortName": {
                            "description": "short name of the bot. Used to uniquely identify which bot to run",
                            "type": "string"
                        },
                        "version": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }]
                        },
                        "options": {
                            "type": "object",
                            "patternProperties": {
                                "^(.*)$": {
                                    "anyOf": [
                                        { "type": "string" },
                                        { "type": "null" }
                                    ]
                                }
                            }
                        }
                    },
                    "required": ["id"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "LobbyUpdateBotResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "LobbyUpdateBotOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/updateBot" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "LobbyUpdateBotFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "lobby/updateBot" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "not_in_lobby",
                                "invalid_bot",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "LobbyUpdatedEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "lobby/updated" },
                "data": {
                    "title": "LobbyUpdatedEventData",
                    "type": "object",
                    "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "mapName": { "type": "string" },
                        "engineVersion": { "type": "string" },
                        "gameVersion": { "type": "string" },
                        "allyTeams": {
                            "type": "object",
                            "patternProperties": {
                                "^(.*)$": {
                                    "anyOf": [
                                        {
                                            "description": "this represent an array, items should be sorted lexicographically on their keys",
                                            "type": "object",
                                            "properties": {
                                                "startBox": {
                                                    "$ref": "#/definitions/startBox"
                                                },
                                                "maxTeams": {
                                                    "type": "integer",
                                                    "minimum": 1
                                                },
                                                "teams": {
                                                    "type": "object",
                                                    "patternProperties": {
                                                        "^(.*)$": {
                                                            "anyOf": [
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "maxPlayers": {
                                                                            "type": "integer",
                                                                            "minimum": 1
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "null"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            },
                                            "required": ["teams"]
                                        },
                                        { "type": "null" }
                                    ]
                                }
                            }
                        },
                        "players": {
                            "type": "object",
                            "patternProperties": {
                                "^(.*)$": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "$ref": "#/definitions/userId"
                                                },
                                                "allyTeam": {
                                                    "type": "string"
                                                },
                                                "team": { "type": "string" },
                                                "player": { "type": "string" }
                                            },
                                            "required": ["id"]
                                        },
                                        { "type": "null" }
                                    ]
                                }
                            }
                        },
                        "spectators": {
                            "type": "object",
                            "patternProperties": {
                                "^(.*)$": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "$ref": "#/definitions/userId"
                                                },
                                                "joinQueuePosition": {
                                                    "anyOf": [
                                                        { "type": "number" },
                                                        { "type": "null" }
                                                    ]
                                                }
                                            },
                                            "required": ["id"]
                                        },
                                        { "type": "null" }
                                    ]
                                }
                            }
                        },
                        "bots": {
                            "type": "object",
                            "patternProperties": {
                                "^(.*)$": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": { "type": "string" },
                                                "hostUserId": {
                                                    "$ref": "#/definitions/userId"
                                                },
                                                "allyTeam": {
                                                    "type": "string"
                                                },
                                                "team": { "type": "string" },
                                                "player": { "type": "string" },
                                                "name": {
                                                    "anyOf": [
                                                        {
                                                            "description": "name to display in the lobby",
                                                            "type": "string"
                                                        },
                                                        { "type": "null" }
                                                    ]
                                                },
                                                "shortName": {
                                                    "description": "Short name of the bot. Used to uniquely identify which bot to run",
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "anyOf": [
                                                        { "type": "string" },
                                                        { "type": "null" }
                                                    ]
                                                },
                                                "options": {
                                                    "anyOf": [
                                                        {
                                                            "type": "object",
                                                            "patternProperties": {
                                                                "^(.*)$": {
                                                                    "anyOf": [
                                                                        {
                                                                            "type": "string"
                                                                        },
                                                                        {
                                                                            "type": "null"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        { "type": "null" }
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "version",
                                                "options"
                                            ]
                                        },
                                        { "type": "null" }
                                    ]
                                }
                            }
                        },
                        "currentBattle": {
                            "anyOf": [
                                {
                                    "description": "If a battle is currently happening, here are the info",
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "startedAt": {
                                            "$ref": "#/definitions/unixTime"
                                        }
                                    },
                                    "required": ["id", "startedAt"]
                                },
                                { "type": "null" }
                            ]
                        }
                    },
                    "required": ["id"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "MatchmakingCancelRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "matchmaking/cancel" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "MatchmakingCancelResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "MatchmakingCancelOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "matchmaking/cancel" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "MatchmakingCancelFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "matchmaking/cancel" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "not_queued",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "MatchmakingCancelledEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "matchmaking/cancelled" },
                "data": {
                    "title": "MatchmakingCancelledEventData",
                    "type": "object",
                    "properties": {
                        "reason": {
                            "enum": [
                                "intentional",
                                "server_error",
                                "party_user_left",
                                "ready_timeout"
                            ]
                        }
                    },
                    "required": ["reason"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "MatchmakingFoundEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "matchmaking/found" },
                "data": {
                    "title": "MatchmakingFoundEventData",
                    "type": "object",
                    "properties": {
                        "queueId": { "type": "string" },
                        "timeoutMs": { "type": "integer" }
                    },
                    "required": ["queueId", "timeoutMs"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "MatchmakingFoundUpdateEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "matchmaking/foundUpdate" },
                "data": {
                    "title": "MatchmakingFoundUpdateEventData",
                    "type": "object",
                    "properties": { "readyCount": { "type": "integer" } },
                    "required": ["readyCount"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "MatchmakingListRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "matchmaking/list" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "MatchmakingListResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "MatchmakingListOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "matchmaking/list" },
                        "status": { "const": "success" },
                        "data": {
                            "title": "MatchmakingListOkResponseData",
                            "type": "object",
                            "properties": {
                                "playlists": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": { "type": "string" },
                                            "name": { "type": "string" },
                                            "numOfTeams": { "type": "integer" },
                                            "teamSize": { "type": "integer" },
                                            "ranked": { "type": "boolean" },
                                            "engines": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "version": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": ["version"]
                                                }
                                            },
                                            "games": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "springName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": ["springName"]
                                                }
                                            },
                                            "maps": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "springName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": ["springName"]
                                                }
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "name",
                                            "numOfTeams",
                                            "teamSize",
                                            "ranked",
                                            "engines",
                                            "games",
                                            "maps"
                                        ]
                                    }
                                }
                            },
                            "required": ["playlists"],
                            "examples": [
                                {
                                    "playlists": [
                                        {
                                            "id": "1v1",
                                            "name": "Duel",
                                            "numOfTeams": 2,
                                            "teamSize": 1,
                                            "ranked": true,
                                            "engines": [
                                                { "version": "2025.01.6" }
                                            ],
                                            "games": [
                                                {
                                                    "springName": "Beyond All Reason test-27414-a84d7e6"
                                                }
                                            ],
                                            "maps": [
                                                {
                                                    "springName": "Theta Crystals 1.3"
                                                },
                                                {
                                                    "springName": "Comet Catcher Remake 1.8"
                                                },
                                                { "springName": "Aurelia v4.1" }
                                            ]
                                        },
                                        {
                                            "id": "1v1v1",
                                            "name": "3 Way FFA",
                                            "numOfTeams": 3,
                                            "teamSize": 1,
                                            "ranked": true,
                                            "engines": [
                                                { "version": "2025.01.6" }
                                            ],
                                            "games": [
                                                {
                                                    "springName": "Beyond All Reason test-27414-a84d7e6"
                                                }
                                            ],
                                            "maps": [
                                                {
                                                    "springName": "Ghenna Rising 4.0.1"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "data"
                    ]
                },
                {
                    "title": "MatchmakingListFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "matchmaking/list" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "MatchmakingLostEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "matchmaking/lost" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "MatchmakingQueueRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "matchmaking/queue" },
                "data": {
                    "title": "MatchmakingQueueRequestData",
                    "type": "object",
                    "properties": {
                        "queues": {
                            "type": "array",
                            "items": { "type": "string" },
                            "minItems": 1
                        }
                    },
                    "required": ["queues"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "MatchmakingQueueResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "MatchmakingQueueOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "matchmaking/queue" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "MatchmakingQueueFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "matchmaking/queue" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "invalid_queue_specified",
                                "already_queued",
                                "already_in_battle",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "MatchmakingQueueUpdateEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "matchmaking/queueUpdate" },
                "data": {
                    "title": "MatchmakingQueueUpdateEventData",
                    "type": "object",
                    "properties": { "playersQueued": { "type": "integer" } },
                    "required": ["playersQueued"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "MatchmakingQueuesJoinedEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "matchmaking/queuesJoined" },
                "data": {
                    "title": "MatchmakingQueuesJoinedEventData",
                    "type": "object",
                    "properties": {
                        "queues": {
                            "type": "array",
                            "items": { "type": "string" },
                            "minItems": 1
                        }
                    },
                    "required": ["queues"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "MatchmakingReadyRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "matchmaking/ready" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "MatchmakingReadyResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "MatchmakingReadyOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "matchmaking/ready" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "MatchmakingReadyFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "matchmaking/ready" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "no_match",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "MessagingReceivedEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "messaging/received" },
                "data": {
                    "title": "MessagingReceivedEventData",
                    "type": "object",
                    "properties": {
                        "message": { "type": "string" },
                        "source": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "player" },
                                        "userId": {
                                            "$ref": "#/definitions/userId"
                                        }
                                    },
                                    "required": ["type", "userId"]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "party" },
                                        "partyId": {
                                            "$ref": "#/definitions/partyId"
                                        },
                                        "userId": {
                                            "$ref": "#/definitions/userId"
                                        }
                                    },
                                    "required": ["type", "partyId", "userId"]
                                }
                            ]
                        },
                        "timestamp": {
                            "$ref": "#/definitions/unixTime",
                            "description": "time at which the message was received by the server"
                        },
                        "marker": { "$ref": "#/definitions/historyMarker" }
                    },
                    "required": ["message", "source", "timestamp", "marker"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "MessagingSendRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "messaging/send" },
                "data": {
                    "title": "MessagingSendRequestData",
                    "type": "object",
                    "properties": {
                        "target": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "player" },
                                        "userId": {
                                            "$ref": "#/definitions/userId"
                                        }
                                    },
                                    "required": ["type", "userId"]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "party" }
                                    },
                                    "required": ["type"]
                                }
                            ]
                        },
                        "message": { "type": "string", "maxLength": 512 }
                    },
                    "required": ["target", "message"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "MessagingSendResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "MessagingSendOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "messaging/send" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "MessagingSendFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "messaging/send" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "message_too_long",
                                "invalid_target",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "MessagingSubscribeReceivedRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "messaging/subscribeReceived" },
                "data": {
                    "title": "MessagingSubscribeReceivedRequestData",
                    "type": "object",
                    "properties": {
                        "since": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "from_start" }
                                    },
                                    "required": ["type"]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "latest" }
                                    },
                                    "required": ["type"]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "type": { "const": "marker" },
                                        "value": {
                                            "$ref": "#/definitions/historyMarker"
                                        }
                                    },
                                    "required": ["type", "value"]
                                }
                            ],
                            "default": { "type": "latest" }
                        }
                    }
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "MessagingSubscribeReceivedResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "MessagingSubscribeReceivedOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "messaging/subscribeReceived" },
                        "status": { "const": "success" },
                        "data": {
                            "title": "MessagingSubscribeReceivedOkResponseData",
                            "type": "object",
                            "properties": {
                                "hasMissedMessages": {
                                    "description": "set to true when the marker sent doesn't match any message stored by the server.",
                                    "type": "boolean"
                                }
                            },
                            "required": ["hasMissedMessages"]
                        }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "data"
                    ]
                },
                {
                    "title": "MessagingSubscribeReceivedFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "messaging/subscribeReceived" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "PartyAcceptInviteRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "party/acceptInvite" },
                "data": {
                    "title": "PartyAcceptInviteRequestData",
                    "type": "object",
                    "properties": {
                        "partyId": { "$ref": "#/definitions/partyId" }
                    },
                    "required": ["partyId"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "PartyAcceptInviteResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "PartyAcceptInviteOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/acceptInvite" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "PartyAcceptInviteFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/acceptInvite" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "PartyCancelInviteRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "party/cancelInvite" },
                "data": {
                    "title": "PartyCancelInviteRequestData",
                    "type": "object",
                    "properties": {
                        "userId": { "$ref": "#/definitions/userId" }
                    },
                    "required": ["userId"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "PartyCancelInviteResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "PartyCancelInviteOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/cancelInvite" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "PartyCancelInviteFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/cancelInvite" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "not_in_party",
                                "invalid_invite",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "PartyCreateRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "party/create" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "PartyCreateResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "PartyCreateOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/create" },
                        "status": { "const": "success" },
                        "data": {
                            "title": "PartyCreateOkResponseData",
                            "type": "object",
                            "properties": {
                                "partyId": { "$ref": "#/definitions/partyId" }
                            },
                            "required": ["partyId"]
                        }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "data"
                    ]
                },
                {
                    "title": "PartyCreateFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/create" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "PartyDeclineInviteRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "party/declineInvite" },
                "data": {
                    "title": "PartyDeclineInviteRequestData",
                    "type": "object",
                    "properties": {
                        "partyId": { "$ref": "#/definitions/partyId" }
                    },
                    "required": ["partyId"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "PartyDeclineInviteResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "PartyDeclineInviteOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/declineInvite" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "PartyDeclineInviteFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/declineInvite" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "PartyInviteRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "party/invite" },
                "data": {
                    "title": "PartyInviteRequestData",
                    "type": "object",
                    "properties": {
                        "userId": { "$ref": "#/definitions/userId" }
                    },
                    "required": ["userId"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "PartyInviteResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "PartyInviteOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/invite" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "PartyInviteFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/invite" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "PartyInvitedEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "party/invited" },
                "data": {
                    "title": "PartyInvitedEventData",
                    "type": "object",
                    "properties": {
                        "party": { "$ref": "#/definitions/partyState" }
                    },
                    "required": ["party"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "PartyKickMemberRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "party/kickMember" },
                "data": {
                    "title": "PartyKickMemberRequestData",
                    "type": "object",
                    "properties": {
                        "userId": { "$ref": "#/definitions/userId" }
                    },
                    "required": ["userId"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "PartyKickMemberResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "PartyKickMemberOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/kickMember" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "PartyKickMemberFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/kickMember" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "PartyLeaveRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "party/leave" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "PartyLeaveResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "PartyLeaveOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/leave" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "PartyLeaveFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "party/leave" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "PartyRemovedEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "party/removed" },
                "data": {
                    "title": "PartyRemovedEventData",
                    "type": "object",
                    "properties": {
                        "partyId": { "$ref": "#/definitions/partyId" }
                    },
                    "required": ["partyId"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "PartyUpdatedEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "party/updated" },
                "data": {
                    "$ref": "#/definitions/partyState",
                    "title": "PartyUpdatedEventData"
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "SystemDisconnectRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "system/disconnect" },
                "data": {
                    "title": "SystemDisconnectRequestData",
                    "type": "object",
                    "properties": { "reason": { "type": "string" } },
                    "required": ["reason"]
                }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "SystemDisconnectResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "SystemDisconnectOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "system/disconnect" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "SystemDisconnectFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "system/disconnect" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "SystemServerStatsRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "system/serverStats" }
            },
            "required": ["type", "messageId", "commandId"]
        },
        {
            "title": "SystemServerStatsResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "SystemServerStatsOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "system/serverStats" },
                        "status": { "const": "success" },
                        "data": {
                            "title": "SystemServerStatsOkResponseData",
                            "type": "object",
                            "properties": {
                                "userCount": { "type": "integer" }
                            },
                            "required": ["userCount"]
                        }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "data"
                    ]
                },
                {
                    "title": "SystemServerStatsFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "system/serverStats" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "UserInfoRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "user/info" },
                "data": {
                    "title": "UserInfoRequestData",
                    "type": "object",
                    "properties": {
                        "userId": { "$ref": "#/definitions/userId" }
                    },
                    "required": ["userId"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "UserInfoResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "UserInfoOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "user/info" },
                        "status": { "const": "success" },
                        "data": {
                            "$ref": "#/definitions/user",
                            "title": "UserInfoOkResponseData"
                        }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "data"
                    ]
                },
                {
                    "title": "UserInfoFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "user/info" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "unknown_user",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "UserSelfEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "user/self" },
                "data": {
                    "title": "UserSelfEventData",
                    "type": "object",
                    "properties": {
                        "user": { "$ref": "#/definitions/privateUser" }
                    },
                    "required": ["user"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "UserSubscribeUpdatesRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "user/subscribeUpdates" },
                "data": {
                    "title": "UserSubscribeUpdatesRequestData",
                    "type": "object",
                    "properties": {
                        "userIds": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/userId" },
                            "minItems": 1,
                            "maxItems": 100
                        }
                    },
                    "required": ["userIds"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "UserSubscribeUpdatesResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "UserSubscribeUpdatesOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "user/subscribeUpdates" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "UserSubscribeUpdatesFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "user/subscribeUpdates" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "subscription_limit_reached",
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "UserUnsubscribeUpdatesRequest",
            "tachyon": {
                "source": "user",
                "target": "server",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "request" },
                "messageId": { "type": "string" },
                "commandId": { "const": "user/unsubscribeUpdates" },
                "data": {
                    "title": "UserUnsubscribeUpdatesRequestData",
                    "type": "object",
                    "properties": {
                        "userIds": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/userId" },
                            "minItems": 1,
                            "maxItems": 100
                        }
                    },
                    "required": ["userIds"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        },
        {
            "title": "UserUnsubscribeUpdatesResponse",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "anyOf": [
                {
                    "title": "UserUnsubscribeUpdatesOkResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "user/unsubscribeUpdates" },
                        "status": { "const": "success" }
                    },
                    "required": ["type", "messageId", "commandId", "status"]
                },
                {
                    "title": "UserUnsubscribeUpdatesFailResponse",
                    "type": "object",
                    "properties": {
                        "type": { "const": "response" },
                        "messageId": { "type": "string" },
                        "commandId": { "const": "user/unsubscribeUpdates" },
                        "status": { "const": "failed" },
                        "reason": {
                            "enum": [
                                "internal_error",
                                "unauthorized",
                                "invalid_request",
                                "command_unimplemented"
                            ]
                        },
                        "details": { "type": "string" }
                    },
                    "required": [
                        "type",
                        "messageId",
                        "commandId",
                        "status",
                        "reason"
                    ]
                }
            ]
        },
        {
            "title": "UserUpdatedEvent",
            "tachyon": {
                "source": "server",
                "target": "user",
                "scopes": ["tachyon.lobby"]
            },
            "type": "object",
            "properties": {
                "type": { "const": "event" },
                "messageId": { "type": "string" },
                "commandId": { "const": "user/updated" },
                "data": {
                    "title": "UserUpdatedEventData",
                    "type": "object",
                    "properties": {
                        "users": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "$ref": "#/definitions/userId"
                                    },
                                    "username": { "type": "string" },
                                    "displayName": { "type": "string" },
                                    "clanId": {
                                        "anyOf": [
                                            { "type": "string" },
                                            { "type": "null" }
                                        ]
                                    },
                                    "countryCode": { "type": "string" },
                                    "status": {
                                        "enum": [
                                            "offline",
                                            "menu",
                                            "playing",
                                            "lobby"
                                        ]
                                    },
                                    "rating": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "description": "Key is omitted when the player isn't rated yet.",
                                                "type": "number"
                                            }
                                        },
                                        "required": ["value"]
                                    },
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "enum": [
                                                "contributor",
                                                "admin",
                                                "moderator",
                                                "tournament_winner",
                                                "tournament_caster"
                                            ]
                                        },
                                        "uniqueItems": true
                                    }
                                }
                            }
                        }
                    },
                    "required": ["users"]
                }
            },
            "required": ["type", "messageId", "commandId", "data"]
        }
    ]
}
